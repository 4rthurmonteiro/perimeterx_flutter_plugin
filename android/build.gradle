group = "com.arthurmonteiroo.perimeterx_flutter_plugin"
version = "1.0-SNAPSHOT"

allprojects {
    repositories {
        maven { url "https://perimeterx.jfrog.io/artifactory/px-Android-SDK/" }
    }
}

buildscript {
    ext.kotlin_version = "1.8.0"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:7.4.2")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    if (project.android.hasProperty("namespace")) {
        namespace = "com.arthurmonteiroo.perimeterx_flutter_plugin"
    }

    compileSdk = 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
    }

    dependencies {
        // PerimeterX SDK - regular integration
        implementation 'com.perimeterx.sdk:msdk:3.3.1'
        implementation 'androidx.core:core-ktx:1.6.0' // max v1.10.1
        implementation 'androidx.appcompat:appcompat:1.3.1' // min v1.0.0
        implementation 'androidx.constraintlayout:constraintlayout:1.1.3' // min v2.0.0
        implementation 'androidx.lifecycle:lifecycle-process:2.6.2' // min v2.6.0
        implementation 'androidx.datastore:datastore-preferences:1.0.0' // exact v1.0.0
        implementation 'com.google.android.material:material:1.5.0' // min v1.6.0 ; max v1.9.0
        implementation 'com.google.android.gms:play-services-instantapps:18.0.1' // min v11.0.0
        implementation 'com.fasterxml.uuid:java-uuid-generator:4.3.0' // min v3.0.0
        implementation 'io.ktor:ktor-client-okhttp:1.6.7' // min v2.2.1 ; max 2.3.4

        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
